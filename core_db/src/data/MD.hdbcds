using Core as EPM;
using Util;

context MD {
    @Comment : 'Document History'
    type HistT {
        CREATEDBY : association to Employees;

        @Comment : 'Created Date'
        CREATEDAT : EPM.SDate;
        CHANGEDBY : association to Employees;

        @Comment : 'Changed Date'
        CHANGEDAT : EPM.SDate;
    };

    @Comment : 'Reusable Name Structure'
    type NameT {
        @Comment : 'First or Given Name'
        FIRST    : EPM.SString;

        @Comment : 'Middle Name'
        MIDDLE   : EPM.SString;

        @Comment : 'Family Name'
        LAST     : EPM.SString;

        @Comment : 'Initials'
        INITIALS : EPM.BusinessKey;
    };
    type SexT : String(1);

    @Comment : 'Addresses for all kinds of usages'
    entity Addresses {
            @Comment : 'Address ID'
        key ADDRESSID   : Integer generated by default as identity(start with 1000000500 increment by 1 no minvalue maxvalue 1999999999 no cache no cycle);

            @Comment : 'City'
            CITY        : EPM.SString;

            @Comment : 'Postal Code'
            POSTALCODE  : EPM.BusinessKey;

            @Comment : 'Street'
            STREET      : EPM.MString;

            @Comment : 'Building Number'
            BUILDING    : EPM.BusinessKey;

            @Comment : 'Country'
            COUNTRY     : String(3);

            @Comment : 'Region Otherwise Known as State in some countries'
            REGION      : String(4);

            @Comment : 'Address Type'
            ADDRESSTYPE : String(2);
            VALIDITY    : EPM.ValidityT;

            @Comment : 'Geo Latitude'
            LATITUDE    : Double;

            @Comment : 'Geo Longitude'
            LONGITUDE   : Double;

            @Comment : 'Geo Point'
            POINT       : hana.ST_POINT;
    }
    technical configuration {
        unload priority 8;
    };

    @Comment : 'Business Partners - both customers and suppliers'
    entity BusinessPartner {
            @Comment : 'Partner ID'
        key PARTNERID    : Integer generated by default as identity(start with 1000000100 increment by 1 no minvalue maxvalue 1999999999 no cache no cycle);

            @Comment : 'Partner Role - Customer or Supplier'
            PARTNERROLE  : String(3); //Business Partner Role

            @Comment : 'Email Address'
            EMAILADDRESS : EPM.LString;

            @Comment : 'Phone Number'
            PHONENUMBER  : EPM.PhoneT;

            @Comment : 'Fax Number'
            FAXNUMBER    : EPM.PhoneT null;

            @Comment : 'Web Site Address'
            WEBADDRESS   : EPM.VLString;
            ADDRESSES    : association to Addresses null;

            @Comment : 'Company Name'
            COMPANYNAME  : String(80);

            @Comment : 'Legal Form'
            LEGALFORM    : EPM.BusinessKey;
            HISTORY      : HistT;

            @Comment : 'Request Document Currency'
            CURRENCY     : EPM.CurrencyT;
    }
    technical configuration {
        //   partition by HASH  (PARTNERID) Partitions GET_NUM_SERVERS();
    };

    @Comment : 'Employees'
    entity Employees {
            @Comment : 'Employee ID'
        key EMPLOYEEID     : Integer generated by default as identity(start with 1000000225 increment by 1 no minvalue maxvalue 1999999999 no cache no cycle);
            NAME           : NameT null;

            @Comment : 'Gender'
            SEX            : SexT;

            @Comment : 'Primary Spoken Language'
            LANGUAGE       : EPM.ABAPLanguage;

            @Comment : 'Primary Phone Number'
            PHONENUMBER    : EPM.PhoneT null;

            @Comment : 'Email Address'
            EMAILADDRESS   : EPM.LString;

            @Comment : 'Login Username'
            LOGINNAME      : String(12);
            ADDRESSES      : association to Addresses null;
            VALIDITY       : EPM.ValidityT;

            @Comment : 'Document Currency'
            CURRENCY       : EPM.CurrencyT;

            @Comment : 'Salary Amount'
            SALARYAMOUNT   : EPM.AmountT;

            @Comment : 'Bank Account Number'
            ACCOUNTNUMBER  : EPM.BusinessKey;

            @Comment : 'Bank ID'
            BANKID         : EPM.BusinessKey;

            @Comment : 'Bank Name'
            BANKNAME       : EPM.LString;

            @Comment : 'Employee Picture URL'
            EMPLOYEEPICURL : EPM.LString;

            @Comment : 'Full Name'
            FULLNAME       : String(100)          = NAME.FIRST || ' ' || NAME.LAST;
    };

    @Comment : 'Products'
    entity Products {
            @Comment : 'Product ID'
        key PRODUCTID     : EPM.BusinessKey;

            @Comment : 'Type Code'
            TYPECODE      : String(2);

            @Comment : 'Product Category'
            CATEGORY      : EPM.SString;
            HISTORY       : HistT;

            @Comment : 'Product Name'
            NAMEID        : Integer null;

            @Comment : 'Product Description'
            DESCID        : Integer null;
            SUPPLIER      : association to MD.BusinessPartner;

            @Comment : 'Tax Tariff Code'
            TAXTARIFFCODE : Integer;

            @Comment : 'Quantity Unit'
            QUANTITYUNIT  : EPM.UnitT;

            @Comment : 'Weight'
            WEIGHTMEASURE : EPM.QuantityT;

            @Comment : 'Weight Unit'
            WEIGHTUNIT    : EPM.UnitT;

            @Comment : 'Currency'
            CURRENCY      : EPM.CurrencyT;

            @Comment : 'Price'
            PRICE         : EPM.AmountT;

            @Comment : 'Product Picture URL'
            PRODUCTPICURL : EPM.LString null;

            @Comment : 'Width'
            WIDTH         : EPM.QuantityT;

            @Comment : 'Depth'
            DEPTH         : EPM.QuantityT;

            @Comment : 'Height'
            HEIGHT        : EPM.QuantityT;

            @Comment : 'Dimension Unit'
            DIMENSIONUNIT : EPM.UnitT;
    }
    technical configuration {
        fulltext index FTI_CATEGORY on (CATEGORY)
            async
            search only off;
    };

    @Comment : 'Product Change Log'
    entity productLog {
            @Comment : 'Product ID'
        key PRODUCTID : String(10);

            @Comment : 'Log Entry ID'
        key LOGID     : Integer;

            @Comment : 'Date and Time of change'
        key DATETIME  : UTCDateTime default current_timestamp;

            @Comment : 'User of change'
        key USERNAME  : String(20);

            @Comment : 'Change log'
            LOGTEXT   : String(500);
    };
};